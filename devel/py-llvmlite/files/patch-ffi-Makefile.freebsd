--- ffi/Makefile.freebsd.orig	2023-07-26 21:05:52 UTC
+++ ffi/Makefile.freebsd
@@ -1,5 +1,5 @@
 
-CXX = clang++ -stdlib=libc++
+CXX ?= clang++ -stdlib=libc++
 
 # -flto and --exclude-libs allow us to remove those parts of LLVM we don't use
 CXX_FLTO_FLAGS ?= -flto
@@ -9,15 +9,20 @@ INCLUDE = core.h
 LDFLAGS := $(LDFLAGS) $(LLVM_LDFLAGS) $(LD_FLTO_FLAGS)
 LIBS = $(LLVM_LIBS)
 INCLUDE = core.h
-SRC = assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp \
-	executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp \
-	linker.cpp object_file.cpp
+OBJ = assembly.o bitcode.o core.o initfini.o module.o value.o \
+	  executionengine.o transforms.o passmanagers.o targets.o dylib.o \
+	  linker.o object_file.o custom_passes.o orcjit.o
 OUTPUT = libllvmlite.so
 
 all: $(OUTPUT)
 
-$(OUTPUT): $(SRC) $(INCLUDE)
-	$(CXX) -shared $(CXXFLAGS) $(SRC) -o $(OUTPUT) $(LDFLAGS) $(LIBS)
+.cpp.o: $(INCLUDE)
+	$(CXX) -c $(CXXFLAGS) $< -o $@
 
+$(OUTPUT): $(OBJ)
+	# static-libstdc++ avoids runtime dependencies on a
+	# particular libstdc++ version.
+	$(CXX) $(CXX_STATIC_LINK) -shared $(CXXFLAGS) $(OBJ) -o $(OUTPUT) $(LDFLAGS) $(LIBS)
+
 clean:
-	rm -rf test
+	rm -rf test $(OUTPUT) $(OBJ)
